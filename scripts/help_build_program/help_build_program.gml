/// help_build_program() - CORRECTED VERSION
function help_build_program() {
    // clear current program and line numbers
    if (ds_exists(global.program_lines, ds_type_map)) ds_map_clear(global.program_lines);
    if (ds_exists(global.line_numbers, ds_type_list)) ds_list_clear(global.line_numbers);

    // Work out how many topics we're going to list
    var topic_count = ds_list_size(global.help_topics);

    // Seed the runtime variable store
    if (!is_undefined(global.basic_variables)) {
        global.basic_variables[? "TOPIC_COUNT"] = topic_count;
    }

    var add = function(n, s) {
        ds_map_add(global.program_lines, n, s);
        ds_list_add(global.line_numbers, n);
    };

    // ==== BASIC "HELP BROWSER" PROGRAM ====
add(10,"REM NW-BASIC HELP SYSTEM - Clean Version (ASCII-safe)");
add(15,"HDR$ = \"\"             : REM avoid undefined var on first header call");
add(20,"CLS: COLOR YELLOW: HDR$=\"NW-BASIC HELP\": GOSUB 7000");
add(30,"PRINT \"Select a topic by number. 0 returns to editor.\"");
add(35,"REM -- Arrays must exist BEFORE we READ into them");
add(36,"DIM TOPIC$(32), TOPIC_START(32), TOPIC_LEN(32)");
add(37,"DIM SUB$(128), SUBTOPIC_OF(128), SUB_START(128), SUB_LEN(128)");
add(38,"DIM IDX(32)");
add(40,"GOSUB 9500   : REM Load data");
add(50,"REM --- MAIN MENU LOOP ---");
add(60,"CLS: HDR$=\"TOPICS - Select a topic (0=Exit)\": GOSUB 7000");
add(65,"PRINT");
add(70,"FOR I=1 TO TOPIC_COUNT: PRINT I; \") \"; TOPIC$(I): NEXT");
add(80,"PRINT");
add(90,"INPUT \"Topic (0=Exit): \", T");
add(100,"IF T=0 THEN END");
add(110,"IF T<1 OR T>TOPIC_COUNT THEN PRINT \"Invalid.\": GOTO 80");
add(120,"REM --- SUBTOPIC MENU LOOP ---");
add(130,"CLS: HDR$=\"TOPIC: \" + TOPIC$(T) + \"  (0=Back)\": GOSUB 7000");
add(140,"C=0");
add(150,"FOR I=1 TO SUB_COUNT");
add(160,"  IF SUBTOPIC_OF(I)=T THEN C=C+1: PRINT C; \") \"; SUB$(I): IDX(C)=I");
add(170,"NEXT");
add(180,"IF C=0 THEN PRINT \"(No subtopics)\": INPUT \"[ENTER]\", X$: GOTO 50");
add(190,"PRINT");
add(200,"INPUT \"Subtopic (0=Back): \",K");
add(210,"IF K=0 THEN GOTO 50");
add(220,"IF K<1 OR K>C THEN GOTO 190");
add(230,"REM --- SHOW CONTENT ---");
add(240,"I = IDX(K): S = SUB_START(I): N = SUB_LEN(I)");
add(250,"GOSUB 8000");
add(260,"GOTO 120");
add(6999,"REM ---- helpers ----");
add(7000,"REM Print a decorated header (no LEN, no REPEAT$)");
add(7005,"D$=\"\": FOR J=1 TO 40: D$=D$ + \"-\": NEXT");
add(7010,"PRINT D$");
add(7015,"IF HDR$ <> \"\" THEN PRINT HDR$");
add(7020,"PRINT D$");
add(7030,"RETURN");
add(8000,"REM --- CONTENT DISPLAY: seek once to first page, then stream N pages ---");
add(8010,"REM We want pages S..S+N-1. Land on page S once, then read forward.");
add(8030,"RESTORE");
add(8040,"READ TC, SC, PC");
add(8050,"FOR SKT = 1 TO TC: READ TMP$, TMP1, TMP2: NEXT SKT");
add(8060,"FOR SKS = 1 TO SC: READ TMP2$, TMP3, TMP4, TMP5: NEXT SKS");
add(8080,"FOR SK = 1 TO S - 1");
add(8090,"  READ L: FOR R = 1 TO L: READ D$: NEXT R");
add(8100,"NEXT SK");
add(8120,"FOR PP = 1 TO N");
add(8130,"  CLS");
add(8140,"  PRINT \"HELP: \"; SUB$(I)");
add(8150,"  HDR$ = \"TOPIC: \" + TOPIC$( SUBTOPIC_OF(I) ) + \"  (0=Back)\": GOSUB 7000");
add(8160,"  PRINT \"Page \"; PP; \" of \"; N");
add(8170,"  PRINT");
add(8180,"  READ L");
add(8190,"  FOR R = 1 TO L");
add(8200,"    READ D$: PRINT D$");
add(8210,"  NEXT R");
add(8220,"  PRINT");
add(8230,"  INPUT \"[ENTER=Next/Back]\", X$");
add(8240,"NEXT PP");
add(8250,"RETURN");
add(9500,"REM -- Load all data --");
add(9510,"RESTORE");
add(9520,"READ TOPIC_COUNT, SUB_COUNT, PAGE_COUNT");
add(9530,"FOR I=1 TO TOPIC_COUNT: READ TOPIC$(I), TOPIC_START(I), TOPIC_LEN(I): NEXT");
add(9550,"FOR I=1 TO SUB_COUNT: READ SUB$(I), SUBTOPIC_OF(I), SUB_START(I), SUB_LEN(I): NEXT");
add(9560,"RETURN");
add(9900,"DATA 9, 27, 38");
add(9910,"REM Topic data: name, start_page, length");
add(9920,"DATA \"Program Structure\", 1, 2");
add(9921,"DATA \"Variables & Data Types\", 3, 3");
add(9922,"DATA \"Input/Output\", 6, 4");
add(9923,"DATA \"Program Control\", 10, 5");
add(9924,"DATA \"MODE / Graphics\", 15, 5");
add(9925,"DATA \"Math & Random\", 20, 4");
add(9926,"DATA \"Strings\", 24, 3");
add(9927,"DATA \"Data & Arrays\", 27, 5");
add(9928,"DATA \"Editor & Files\", 32, 7");
add(9930,"REM Subtopic data: name, parent_topic, start_page, length");
add(9931,"DATA \"Line Numbers\", 1, 1, 1");
add(9932,"DATA \"Multiple Statements\", 1, 2, 1");
add(9933,"DATA \"LET & Types\", 2, 3, 1");
add(9934,"DATA \"Arrays (DIM)\", 2, 4, 2");
add(9935,"DATA \"PRINT\", 3, 6, 2");
add(9936,"DATA \"INPUT\", 3, 8, 1");
add(9937,"DATA \"CLS/Color\", 3, 9, 1");
add(9938,"DATA \"IF / ELSE / ENDIF\", 4, 10, 2");
add(9939,"DATA \"FOR/NEXT\", 4, 12, 1");
add(9940,"DATA \"WHILE/WEND\", 4, 13, 1");
add(9941,"DATA \"GOTO/GOSUB/RETURN\", 4, 14, 1");
add(9942,"DATA \"MODE 1 & Fonts\", 5, 15, 2");
add(9943,"DATA \"PRINTAT/CHARAT\", 5, 17, 2");
add(9944,"DATA \"CLSCHAR/SCROLL\", 5, 19, 1");
add(9945,"DATA \"Math & Trig\", 6, 20, 2");
add(9946,"DATA \"RND\", 6, 22, 1");
add(9947,"DATA \"Operators\", 6, 23, 1");
add(9948,"DATA \"Substring & Len\", 7, 24, 1");
add(9949,"DATA \"CHR$/ASC\", 7, 25, 1");
add(9950,"DATA \"Concatenation\", 7, 26, 1");
add(9951,"DATA \"DATA/READ/RESTORE\", 8, 27, 2");
add(9952,"DATA \"Named Streams\", 8, 29, 1");
add(9953,"DATA \"Arrays\", 8, 30, 2");
add(9954,"DATA \"Editor Commands\", 9, 32, 3");
add(9955,"DATA \"DIR Overlay\", 9, 35, 1");
add(9956,"DATA \"SAVE/LOAD\", 9, 36, 1");
add(9957,"DATA \"Shortcuts\", 9, 37, 2");
add(10000,"REM === Page 1: Program Structure / Line Numbers ===");
add(10010,"DATA 9");
add(10011,"DATA \"PROGRAM STRUCTURE\"");
add(10012,"DATA \"What: Programs are a list of numbered lines.\"");
add(10013,"DATA \"Syntax: 10 STATEMENT  : 20 STATEMENT\"");
add(10014,"DATA \"Type: 10 PRINT \"\"Hello\"\"  : 20 END\"");
add(10015,"DATA \"Gotchas: Use gaps 10,20,30 so you can insert.\"");
add(10016,"DATA \"Gotchas: A repeated number overwrites that line.\"");
add(10017,"DATA \"See also: Multiple Statements, GOTO, GOSUB\"");
add(10018,"DATA \"SCREENEDIT or SE = full screen editor\"");
add(10019,"DATA \"Use REM or ' to start a comment to end of line\"");
add(10020,"REM === Page 2: Program Structure / Multiple Statements ===");
add(10030,"DATA 7");
add(10031,"DATA \"PROGRAM STRUCTURE\"");
add(10032,"DATA \"What: Put several statements on one line.\"");
add(10033,"DATA \"Syntax: STAT : STAT : STAT\"");
add(10034,"DATA \"Type: 10 A=1: B=2: PRINT A+B\"");
add(10035,"DATA \"Gotchas: Keep lines short for readability.\"");
add(10036,"DATA \"See also: LET & Types, IF, FOR/NEXT\"");
add(10037,"DATA \"\"");
add(10040,"REM === Page 3: Variables & Data Types / LET & Types ===");
add(10050,"DATA 9");
add(10051,"DATA \"VARIABLES & TYPES\"");
add(10052,"DATA \"What: Store numbers or text in named variables.\"");
add(10053,"DATA \"Syntax: A=5  or  LET A=5  ;  N$=\"\"Name\"\"\"");
add(10054,"DATA \"Type: A=3: B=4: PRINT A+B   :  N$=\"\"Joe\"\"\"");
add(10055,"DATA \"Type: PRINT \"\"Hello, \"\" + N$\"");
add(10056,"DATA \"Gotchas: Names ending in $ are strings only.\"");
add(10057,"DATA \"Gotchas: Others are numeric; default is 0.\"");
add(10058,"DATA \"See also: Strings, PRINT\"");
add(10059,"DATA \"\"");
add(10060,"REM === Page 4: Variables & Data Types / Arrays (DIM) p1 ===");
add(10070,"DATA 9");
add(10071,"DATA \"ARRAYS (DIM) - Part 1\"");
add(10072,"DATA \"What: Store many values under one name.\"");
add(10073,"DATA \"Syntax: DIM A(10)  ;  DIM N$(5)\"");
add(10074,"DATA \"Type: DIM A(3): A(1)=10: A(2)=20: PRINT A(1)+A(2)\"");
add(10075,"DATA \"Type: DIM N$(2): N$(1)=\"\"OK\"\": PRINT N$(1)\"");
add(10076,"DATA \"Gotchas: Indexing is 1-based in this build.\"");
add(10077,"DATA \"Gotchas: Out of range gives 0 or empty string.\"");
add(10078,"DATA \"See also: Arrays p2, Data & Arrays\"");
add(10079,"DATA \"\"");
add(10080,"REM === Page 5: Variables & Data Types / Arrays (DIM) p2 ===");
add(10090,"DATA 8");
add(10091,"DATA \"ARRAYS (DIM) - Part 2\"");
add(10092,"DATA \"What: Use expressions for the index.\"");
add(10093,"DATA \"Type: I=3: DIM A(5): A(I-1)=7: PRINT A(2)\"");
add(10094,"DATA \"Type: DIM N$(3): N$(1)=\"\"A\"\": PRINT N$(1)\"");
add(10095,"DATA \"Gotchas: Arrays and scalars are distinct names.\"");
add(10096,"DATA \"Gotchas: Re-DIM by defining before use.\"");
add(10097,"DATA \"See also: Substring & LEN, Data & Arrays\"");
add(10098,"DATA \"\"");
add(10100,"REM === Page 6: Input/Output / PRINT p1 ===");
add(10110,"DATA 9");
add(10111,"DATA \"PRINT - Part 1\"");
add(10112,"DATA \"What: Show text or values on the screen.\"");
add(10113,"DATA \"Syntax: PRINT expr   ;   PRINT A;B   ;   PRINT A,B\"");
add(10114,"DATA \"Type: PRINT \"\"Hello\"\"   :   PRINT 1,2,3\"");
add(10115,"DATA \"Type: A=3: B=4: PRINT \"\"Sum=\"\";A+B\"");
add(10116,"DATA \"Output: 1       2       3\"");
add(10117,"DATA \"Gotchas: A trailing ; keeps the cursor on the line.\"");
add(10118,"DATA \"See also: PRINT p2, INPUT\"");
add(10119,"DATA \"\"");
add(10120,"REM === Page 7: Input/Output / PRINT p2 ===");
add(10130,"DATA 8");
add(10131,"DATA \"PRINT - Part 2\"");
add(10132,"DATA \"What: Format with strings for labels.\"");
add(10133,"DATA \"Type: PRINT \"\"A=\"\"+STR$(5)\"");
add(10134,"DATA \"Type: PRINT \"\"First\"\";: PRINT \"\" line\"\"\"");
add(10135,"DATA \"Gotchas: , uses tab columns; ; no spacing.\"");
add(10136,"DATA \"Gotchas: Use CHR$(13)+CHR$(10) for custom breaks.\"");
add(10137,"DATA \"See also: Strings, CHR$/ASC\"");
add(10138,"DATA \"\"");
add(10140,"REM === Page 8: Input/Output / INPUT ===");
add(10150,"DATA 8");
add(10151,"DATA \"INPUT\"");
add(10152,"DATA \"What: Ask the user for a number or text.\"");
add(10153,"DATA \"Syntax: INPUT \"\"Prompt: \"\", X   or   INPUT \"\"Name: \"\", N$\"");
add(10154,"DATA \"Type: INPUT \"\"Name: \"\", N$: PRINT \"\"Hello, \"\";N$\"");
add(10155,"DATA \"INKEY$ returns one key from the queue; \"\"\"\" if none\"");
add(10156,"DATA \"Gotchas: Use $ names for text; others are numeric.\"");
add(10157,"DATA \"Gotchas: Entering nothing keeps current value.\"");
add(10158,"DATA \"See also: PRINT, IF, Shortcuts\"");
add(10160,"REM === Page 9: Input/Output / CLS & Color ===");
add(10170,"DATA 8");
add(10171,"DATA \"CLS & COLOR\"");
add(10172,"DATA \"What: Clear the screen and set text color.\"");
add(10173,"DATA \"Syntax: CLS    ;   COLOR YELLOW\"");
add(10174,"DATA \"Type: CLS: COLOR YELLOW: PRINT \"\"Ready\"\"\"");
add(10175,"DATA \"Gotchas: Use a small set of named colors.\"");
add(10176,"DATA \"Gotchas: Clear before drawing a new view.\"");
add(10177,"DATA \"See also: MODE 1, PRINTAT\"");
add(10178,"DATA \"\"");
add(10180,"REM === Page 10: Program Control / IF-ELSE-ENDIF p1 ===");
add(10190,"DATA 9");
add(10191,"DATA \"IF / ELSE / ENDIF - Part 1\"");
add(10192,"DATA \"What: Run code only when a test is true.\"");
add(10193,"DATA \"Syntax:\"");
add(10194,"DATA \"IF A>0 THEN\"");
add(10195,"DATA \"  PRINT \"\"POSITIVE\"\"\"");
add(10196,"DATA \"ELSE\"");
add(10197,"DATA \"  PRINT \"\"NON-POSITIVE\"\"\"");
add(10198,"DATA \"ENDIF\"");
add(10199,"DATA \"\"");
add(10200,"REM === Page 11: Program Control / IF-ELSE-ENDIF p2 ===");
add(10210,"DATA 7");
add(10211,"DATA \"IF / ELSE / ENDIF - Part 2\"");
add(10212,"DATA \"What: Single-line IF for short actions.\"");
add(10213,"DATA \"Type: IF A=0 THEN PRINT \"\"ZERO\"\"\"");
add(10214,"DATA \"Gotchas: Use parentheses to group tests.\"");
add(10215,"DATA \"Gotchas: Strings compare with = and <>.\"");
add(10216,"DATA \"See also: FOR/NEXT, WHILE/WEND\"");
add(10217,"DATA \"\"");
add(10220,"REM === Page 12: Program Control / FOR-NEXT ===");
add(10230,"DATA 8");
add(10231,"DATA \"FOR / NEXT\"");
add(10232,"DATA \"What: Repeat a block a set number of times.\"");
add(10233,"DATA \"Syntax: FOR I=start TO end [STEP s] ... NEXT\"");
add(10234,"DATA \"Type: FOR I=1 TO 5: PRINT I: NEXT\"");
add(10235,"DATA \"Type: FOR T=10 TO 0 STEP -2: PRINT T: NEXT\"");
add(10236,"DATA \"Gotchas: Do not change I inside the loop.\"");
add(10237,"DATA \"See also: WHILE/WEND, IF\"");
add(10238,"DATA \"\"");
add(10240,"REM === Page 13: Program Control / WHILE-WEND ===");
add(10250,"DATA 6");
add(10251,"DATA \"WHILE / WEND\"");
add(10252,"DATA \"What: Repeat while a condition is true.\"");
add(10253,"DATA \"Syntax: WHILE cond: ... : WEND\"");
add(10254,"DATA \"Type: A=3: WHILE A>0: PRINT A: A=A-1: WEND\"");
add(10255,"DATA \"Gotchas: Ensure progress to avoid an infinite loop.\"");
add(10256,"DATA \"\"");
add(10260,"REM === Page 14: Program Control / GOTO-GOSUB-RETURN ===");
add(10270,"DATA 8");
add(10271,"DATA \"GOTO / GOSUB / RETURN\"");
add(10272,"DATA \"What: Jump or call a subroutine by line number.\"");
add(10273,"DATA \"Type: 100 GOSUB 900 : PRINT \"\"Back\"\" : END\"");
add(10274,"DATA \"Type: 900 PRINT \"\"Hi\"\": RETURN\"");
add(10275,"DATA \"Gotchas: RETURN goes to the line after GOSUB.\"");
add(10276,"DATA \"Gotchas: Use small helpers; avoid deep nesting.\"");
add(10277,"DATA \"See also: Line Numbers, IF\"");
add(10278,"DATA \"\"");
add(10280,"REM === Page 15: MODE / Graphics / MODE1 & Fonts p1 ===");
add(10290,"DATA 8");
add(10291,"DATA \"MODE 1 & FONTS - Part 1\"");
add(10292,"DATA \"What: Character grid display with sprite fonts.\"");
add(10293,"DATA \"Syntax: FONT \"\"DEFAULT_16\"\"\"");
add(10294,"DATA \"Type: FONT \"\"DEFAULT_16\"\": PRINT \"\"Hello\"\"\"");
add(10295,"DATA \"Gotchas: Tile size sets columns and rows.\"");
add(10296,"DATA \"Gotchas: Keep a consistent font for readability.\"");
add(10297,"DATA \"See also: PRINTAT/CHARAT\"");
add(10298,"DATA \"\"");
add(10300,"REM === Page 16: MODE / Graphics / MODE1 & Fonts p2 ===");
add(10310,"DATA 7");
add(10311,"DATA \"MODE 1 & FONTS - Part 2\"");
add(10312,"DATA \"What: Pick a tile size for your layout.\"");
add(10313,"DATA \"Guide: 16x16 is readable; 8x8 fits more text.\"");
add(10314,"DATA \"Tip: Test on your target window size.\"");
add(10315,"DATA \"Tip: Use headers and spacing to reduce clutter.\"");
add(10316,"DATA \"See also: PRINTAT/CHARAT, CLSCHAR/SCROLL\"");
add(10317,"DATA \"\"");
add(10320,"REM === Page 17: MODE / Graphics / PRINTAT-CHARAT p1 ===");
add(10330,"DATA 8");
add(10331,"DATA \"PRINTAT / CHARAT - Part 1\"");
add(10332,"DATA \"What: Draw at a grid position.\"");
add(10333,"DATA \"Syntax: PRINTAT x,y,\"\"Text\"\"\"");
add(10334,"DATA \"Syntax: CHARAT x,y,code[,fg[,bg]]\"");
add(10335,"DATA \"Type: PRINTAT 1,1,\"\"TOP\"\"\"");
add(10336,"DATA \"Type: CHARAT 10,5,45  ' draw '-'\"");
add(10337,"DATA \"See also: MODE 1, CLSCHAR/SCROLL\"");
add(10338,"DATA \"\"");
add(10340,"REM === Page 18: MODE / Graphics / PRINTAT-CHARAT p2 ===");
add(10350,"DATA 7");
add(10351,"DATA \"PRINTAT / CHARAT - Part 2\"");
add(10352,"DATA \"Tip: To center: start=(cols-LEN)/2 (manual).\"");
add(10353,"DATA \"Tip: Redraw only the parts that change.\"");
add(10354,"DATA \"Tip: Keep a cursor state if you blink text.\"");
add(10355,"DATA \"Tip: Use constants for colors and codes.\"");
add(10356,"DATA \"See also: MODE 1, DIR Overlay\"");
add(10357,"DATA \"\"");
add(10360,"REM === Page 19: MODE / Graphics / CLSCHAR-SCROLL ===");
add(10370,"DATA 7");
add(10371,"DATA \"CLSCHAR / SCROLL\"");
add(10372,"DATA \"What: Fill the screen or move text rows.\"");
add(10373,"DATA \"Syntax: CLSCHAR code[,fg[,bg]]\"");
add(10374,"DATA \"Syntax: SCROLL dir[,rows]\"");
add(10375,"DATA \"Tip: Use SCROLL for pager effects.\"");
add(10376,"DATA \"See also: PRINTAT, Page Reader\"");
add(10377,"DATA \"\"");
add(10380,"REM === Page 20: Math & Random / Math & Trig p1 ===");
add(10390,"DATA 8");
add(10391,"DATA \"MATH & TRIG - Part 1\"");
add(10392,"DATA \"What: Common numeric functions.\"");
add(10393,"DATA \"Funcs: ABS, INT, SGN, EXP, LOG\"");
add(10394,"DATA \"Funcs: SIN, COS, TAN   (radians)\"");
add(10395,"DATA \"Type: PRINT ABS(-3), INT(3.9)\"");
add(10396,"DATA \"Tip: Use parentheses for clarity.\"");
add(10397,"DATA \"See also: Operators, RND\"");
add(10398,"DATA \"\"");
add(10400,"REM === Page 21: Math & Random / Math & Trig p2 ===");
add(10410,"DATA 7");
add(10411,"DATA \"MATH & TRIG - Part 2\"");
add(10412,"DATA \"What: More math helpers and tips.\"");
add(10413,"DATA \"Type: PRINT SGN(-5), EXP(1)\"");
add(10414,"DATA \"Tip: Compare floats with a small tolerance.\"");
add(10415,"DATA \"Tip: Use MOD for wrap-around indices.\"");
add(10416,"DATA \"See also: RND, Operators\"");
add(10417,"DATA \"\"");
add(10420,"REM === Page 22: Math & Random / RND ===");
add(10430,"DATA 7");
add(10431,"DATA \"RND\"");
add(10432,"DATA \"What: Random number generator.\"");
add(10433,"DATA \"Type: PRINT RND()         ' 0.0..1.0\"");
add(10434,"DATA \"Type: PRINT RND(6)       ' 1..6\"");
add(10435,"DATA \"Type: PRINT RND(2,5)     ' 2..5\"");
add(10436,"DATA \"See also: Math & Trig, Operators\"");
add(10437,"DATA \"\"");
add(10440,"REM === Page 23: Math & Random / Operators ===");
add(10450,"DATA 7");
add(10451,"DATA \"OPERATORS\"");
add(10452,"DATA \"What: + - * /  \\  MOD  ^  and comparisons.\"");
add(10453,"DATA \"Type: PRINT 3+4*2, 7 MOD 5, 5^2\"");
add(10454,"DATA \"Tip: '\\' is integer divide; trunc toward zero.\"");
add(10455,"DATA \"Tip: Use parentheses to control order.\"");
add(10456,"DATA \"See also: Math & Trig\"");
add(10457,"DATA \"\"");
add(10460,"REM === Page 24: Strings / Substring & LEN ===");
add(10470,"DATA 8");
add(10471,"DATA \"STRINGS - Substrings\"");
add(10472,"DATA \"What: Slice parts of a string.\"");
add(10473,"DATA \"Syntax: LEFT$(S$,N), RIGHT$(S$,N), MID$(S$,s,l)\"");
add(10474,"DATA \"Type: S$=\"\"HELLO\"\": PRINT LEFT$(S$,2)   ' HE\"");
add(10475,"DATA \"Type: PRINT MID$(S$,2,3)               ' ELL\"");
add(10476,"DATA \"Note: LEN is not provided in this build.\"");
add(10477,"DATA \"See also: CHR$/ASC, Concatenation, REPEAT$\"");
add(10478,"DATA \"\"");
add(10480,"REM === Page 25: Strings / CHR$ & ASC ===");
add(10490,"DATA 7");
add(10491,"DATA \"STRINGS - CHR$ & ASC\"");
add(10492,"DATA \"What: Convert between codes and characters.\"");
add(10493,"DATA \"Type: PRINT CHR$(65)      ' A\"");
add(10494,"DATA \"Type: PRINT ASC(\"\"A\"\")     ' 65\"");
add(10495,"DATA \"Tip: Useful for line chars or input parsing.\"");
add(10496,"DATA \"See also: Substrings, Concatenation\"");
add(10497,"DATA \"\"");
add(10500,"REM === Page 26: Strings / Concatenation ===");
add(10510,"DATA 8");
add(10511,"DATA \"STRINGS - Concatenation, semicolon or +\"");
add(10512,"DATA \"What: Join strings with +.\"");
add(10513,"DATA \"Type: NAME$=\"\"Ada\"\": PRINT \"\"Hi, \"\"+NAME$\"");
add(10514,"DATA \"Type: PRINT \"\"A=\"\" + STR$(3)\"");
add(10515,"DATA \"Type: PRINT REPEAT$(\"\"-\"\",5) ' -----\"");
add(10516,"DATA \"Semicolon = no line feed after string\"");
add(10517,"DATA \"Tip: Build long lines piece by piece.\"");
add(10518,"DATA \"See also: PRINT, Substrings, REPEAT$\"");
add(10520,"REM === Page 27: Data & Arrays / DATA-READ-RESTORE p1 ===");
add(10530,"DATA 8");
add(10531,"DATA \"DATA / READ / RESTORE - Part 1\"");
add(10532,"DATA \"What: Store constants in the code and read them.\"");
add(10533,"DATA \"Syntax: DATA ...  ;  READ A,B$  ;  RESTORE\"");
add(10534,"DATA \"Type: RESTORE: READ N$,X: PRINT N$,X\"");
add(10535,"DATA \"Type: DATA \"\"OK\"\", 42\"");
add(10536,"DATA \"Tip: Keep tables grouped at the end.\"");
add(10537,"DATA \"See also: Named Streams, Arrays\"");
add(10538,"DATA \"\"");
add(10540,"REM === Page 28: Data & Arrays / DATA-READ-RESTORE p2 ===");
add(10550,"DATA 8");
add(10551,"DATA \"DATA / READ / RESTORE - Part 2\"");
add(10552,"DATA \"What: Seek by rewinding then skipping blocks.\"");
add(10553,"DATA \"Step 1: RESTORE\"");
add(10554,"DATA \"Step 2: READ past headers and tables\"");
add(10555,"DATA \"Step 3: Skip pages by count to your target\"");
add(10556,"DATA \"This help program uses that exact pattern.\"");
add(10557,"DATA \"See also: Page Reader code path\"");
add(10558,"DATA \"\"");
add(10560,"REM === Page 29: Data & Arrays / Named Streams ===");
add(10570,"DATA 7");
add(10571,"DATA \"NAMED DATA STREAMS\"");
add(10572,"DATA \"What: Keep multiple logical DATA streams.\"");
add(10573,"DATA \"Syntax: RESTORE but no line #;   READ ...\"");
add(10574,"DATA \"\"");
add(10575,"DATA \"Use: Separate content tables by purpose.\"");
add(10576,"DATA \"See also: DATA/READ/RESTORE\"");
add(10577,"DATA \"\"");
add(10580,"REM === Page 30: Data & Arrays / Arrays topic p1 ===");
add(10590,"DATA 7");
add(10591,"DATA \"ARRAYS - Topic (Part 1)\"");
add(10592,"DATA \"What: Use arrays for menus and listings.\"");
add(10593,"DATA \"Type: DIM IDX(32): IDX(1)=7: PRINT IDX(1)\"");
add(10594,"DATA \"Tip: 1-based loops pair well with arrays.\"");
add(10595,"DATA \"Tip: Always check user input bounds.\"");
add(10596,"DATA \"See also: Arrays p2, INPUT\"");
add(10597,"DATA \"\"");
add(10600,"REM === Page 31: Data & Arrays / Arrays topic p2 ===");
add(10610,"DATA 7");
add(10611,"DATA \"ARRAYS - Topic (Part 2)\"");
add(10612,"DATA \"What: Store records in parallel arrays.\"");
add(10613,"DATA \"Type: DIM A(3),B$(3): A(1)=10: B$(1)=\"\"OK\"\"\"");
add(10614,"DATA \"\"");
add(10615,"DATA \"\"");
add(10616,"DATA \"See also: Data & Arrays\"");
add(10617,"DATA \"\"");
add(10620,"REM === Page 32: Editor & Files / Editor Commands p1 ===");
add(10630,"DATA 8");
add(10631,"DATA \"EDITOR COMMANDS - Part 1\"");
add(10632,"DATA \"What: Basic editor actions.\"");
add(10633,"DATA \"Type: LIST   : RUN   : NEW   : SAVE \"\"NAME\"\"\"");
add(10634,"DATA \"Use: COPY then :PASTE to move blocks of code\"");
add(10635,"DATA \"Use: DIR overlay to pick files\"");
add(10636,"DATA \"Tip: Keep frequent saves and backups.\"");
add(10637,"DATA \"See also: Shortcuts, DIR Overlay\"");
add(10638,"DATA \"\"");
add(10640,"REM === Page 33: Editor & Files / Editor Commands p2 ===");
add(10650,"DATA 7");
add(10651,"DATA \"EDITOR COMMANDS - Part 2\"");
add(10652,"DATA \"What: Edit by line number; retype to replace.\"");
add(10653,"DATA \"Use: LIST to view lines; NEW clears program\"");
add(10654,"DATA \"Use: RUN to execute; ESC to stop\"");
add(10655,"DATA \"Tip: Save often with SAVE \"\"NAME\"\"\"");
add(10656,"DATA \"SCREENEDIT or SE to load full screen editor.\"");
add(10657,"DATA \"See also: SAVE/LOAD\"");
add(10660,"REM === Page 34: Editor & Files / Editor Commands p3 ===");
add(10670,"DATA 7");
add(10671,"DATA \"EDITOR COMMANDS - Part 3\"");
add(10672,"DATA \"What: Debugging tips.\"");
add(10673,"DATA \"Use: Console logs for tracing (HTML)\"");
add(10674,"DATA \"Use: RUN to Run Program, ESC to stop\"");
add(10675,"DATA \"\"");
add(10676,"DATA \"See also: Shortcuts\"");
add(10677,"DATA \"\"");
add(10680,"REM === Page 35: Editor & Files / DIR Overlay ===");
add(10690,"DATA 7");
add(10691,"DATA \"DIR OVERLAY\"");
add(10692,"DATA \"What: Pick files from a directory overlay.\"");
add(10693,"DATA \"Keys: Arrows to move, ENTER select, ESC cancel\"");
add(10694,"DATA \"Tip: Pause editor input while overlay is open.\"");
add(10695,"DATA \"Tip: Validate names and paths.\"");
add(10696,"DATA \"See also: SAVE/LOAD\"");
add(10697,"DATA \"NOTE: Currently some oddities 9 Sept 2025\"");
add(10700,"REM === Page 36: Editor & Files / SAVE-LOAD ===");
add(10710,"DATA 8");
add(10711,"DATA \"SAVE / LOAD\"");
add(10712,"DATA \"What: Save a program and load it later.\"");
add(10713,"DATA \"Type: SAVE \"\"DEMO\"\"   :   LOAD \"\"DEMO\"\"\"");
add(10714,"DATA \"Tip: Avoid spaces or odd characters in \"");
add(10715,"DATA \"names.\"");
add(10716,"DATA \"Tip: Confirm overwrite; keep versions.\"");
add(10717,"DATA \"Tip: Consider auto-save on run or exit.\"");
add(10718,"DATA \"See also: Editor Commands, DIR Overlay\"");
add(10720,"REM === Page 37: Editor & Files / Shortcuts p1 ===");
add(10730,"DATA 7");
add(10731,"DATA \"SHORTCUTS - Part 1\"");
add(10732,"DATA \"F5 Dumps program to Console (HTML); ESC = STOP\"");
add(10733,"DATA \"Ctrl+C Copy   ;   Ctrl+V Paste (browser perms)\"");
add(10734,"DATA \"Command: HELP to open this help\"");
add(10735,"DATA \"Tip: Show hints in the status bar.\"");
add(10736,"DATA \"SE short for SCREENEDIT; Full screen editor\"");
add(10737,"DATA \"See also: Shortcuts p2\"");
add(10740,"REM === Page 38: Editor & Files / Shortcuts p2 ===");
add(10750,"DATA 7");
add(10751,"DATA \"SHORTCUTS - Part 2\"");
add(10752,"DATA \"Tips: Keep lines short; use gaps 10,20,30\"");
add(10753,"DATA \"Tips: Label output: PRINT \"\"A=\"\" ; A\"");
add(10754,"DATA \"Tips: Use comments with REM or '\"");
add(10755,"DATA \"Tips: Re-run often; save before big edits\"");
add(10756,"DATA \"See also: Editor Commands\"");
add(10757,"DATA \"\"");

}